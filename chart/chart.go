package chart

import (
	"os"

	"github.com/go-echarts/go-echarts/v2/charts"
	"github.com/go-echarts/go-echarts/v2/opts"
)

// generate random data for bar chart
// func generateBarItems() []opts.BarData {
// 	items := make([]opts.BarData, 0)
// 	for i := 0; i < 7; i++ {
// 		items = append(items, opts.BarData{Value: rand.Intn(300)})
// 	}
// 	return items
// }

// func main() {
// 	// create a new bar instance
// 	bar := charts.NewBar()
// 	// set some global options like Title/Legend/ToolTip or anything else
// 	bar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{
// 		Title:    "My first bar chart generated by go-echarts",
// 		Subtitle: "It's extremely easy to use, right?",
// 	}))

// 	// Put data into instance
// 	items := generateBarItems()
// 	for i := range items {
// 		fmt.Printf("%d - %#v\n", i, items[i])
// 	}
// 	bar.SetXAxis([]string{"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"}).
// 		AddSeries("Category A", items)
// 	// Where the magic happens
// 	f, _ := os.Create("bar.html")
// 	bar.Render(f)
// }

func Chart(data []opts.BarData, axis []string) {
	// create a new bar instance
	bar := charts.NewBar()
	// set some global options like Title/Legend/ToolTip or anything else
	bar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{
		Title:    "Resumo de convulsões",
		Subtitle: "Visualização por hora do dia",
	}))
	// Put data into instance
	bar.SetXAxis(axis).
		AddSeries("Hora do dia", data)
	// Where the magic happens
	f, _ := os.Create("bar.html")
	bar.Render(f)
}
